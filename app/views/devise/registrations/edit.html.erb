<div class="jumbotron ">
  <h2>Edit <%= resource_name.to_s.humanize %></h2>
  <%= form_for(resource, as: resource_name, url: update_user_details_path(resource), html: { method: :put }) do |f| %>
    <%= render "devise/shared/error_messages", resource: resource %>
    <div class="form-group">
      <%= f.label :email %><br />
      <%= f.email_field :email, autofocus: true, autocomplete: "email",class: "form-control", placeholder: "Enter email" %>
    </div>
    <div class="form-group">
      <%= f.label :first_name %><br />
      <%= f.text_field :first_name,class: "form-control", placeholder: "Enter First Name" %>
    </div>
    <div class="form-group">
      <%= f.label :last_name %><br />
      <%= f.text_field :last_name,class: "form-control", placeholder: "Enter Last Name" %>
    </div>
    <div class="form-group">
      <%= f.label :gender %><br />
      <%= f.select "gender", options_for_select(['M','F']), {}, class:'custom-select' %>
    </div>
    <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
      <div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
    <% end %>
    <div class="form-group">
      <%= f.label :password %> <i>(leave blank if you don't want to change it)</i><br />
      <%= f.password_field :password, autocomplete: "new-password",class: "form-control", placeholder: "Password" %>
      <% if @minimum_password_length %>
        <br />
        <em><%= @minimum_password_length %> characters minimum</em>
      <% end %>
    </div>
    <div class="form-group">
      <%= f.label :password_confirmation %><br />
      <%= f.password_field :password_confirmation, autocomplete: "new-password",class: "form-control", placeholder: "Password" %>
    </div>
    <div class="form-group">
      <%= f.label :security_question %>
      <%= text_field_tag :security_question, security_questions[current_user.answer.first.to_i], class: "form-control", disabled: true %>
    </div>
    <div class="form-group">
      <%= f.label :security_answer %>
      <%= f.password_field :answer, class: 'form-control',placeholder: "Answer" %>
    </div>


    <div class="form-group col-md-12">
      <div class="row">
        <div class="col-md-6">
          <%= f.label :include_job %>
          <%= f.text_field :include_job1, class: 'form-control' %>
          <%= f.text_field :include_job2, class: 'form-control' %>
          <%= f.text_field :include_job3, class: 'form-control' %>
        </div>
        <div class="col-md-6">
          <%= f.label :dont_include_job %>
          <%= text_field_tag :not_include_job1, "#{f.object.not_include_job1}", class: 'form-control' %>
          <%= text_field_tag :not_include_job2, "#{f.object.not_include_job2}", class: 'form-control' %>
          <%= text_field_tag :not_include_job3, "#{f.object.not_include_job3}", class: 'form-control' %>
        </div>
      </div>
    </div>
    <% if current_user.stripe_id.present? %>
      <% plan = get_plan_detail %>
      <div class="form-group col-md-12">
        <div class="row">
          <div class="col-md-6">
            <h2>Package Information</h2>
            Type:<%= plan['nickname'] %><br>
            Price:<%= plan['amount'] %>
          </div>
          <div class="col-md-6">
            <h2>Change Package</h2>
            <table style="width:100%">
              <tr>
                <th>Plan Name</th>
                <th>Amount</th>
                <th>Currency</th>
                <th>Select Plan</th>
              </tr>
              <% plan_list = list_all_plan %>
              <% plan_list.each do |plan_list| %>
                <% if plan_list['nickname'] != plan['nickname']%>
                  <tr>
                    <td><%= plan_list['nickname'] %></td>
                    <td><%= plan_list['amount']%></td>
                    <td><%= plan_list['currency']%></td>
                    <td><%= link_to 'Pay', payment_form_path(plan_is: plan['id']), class: "stripe-button btn btn-success" %></td>
                  </tr>
                <% end %>
              <% end %>
            </table>
          </div>
          <%= link_to 'Unsubscribe', cancel_subscription_path, class: 'btn btn-danger', confirm: 'Are you sure you want to Unsubscribe from this plan?' %>
        </div>
      </div>
    <%end %>
    <div class="form-group">
      <%= f.submit "Update", id: 'edit_user_details', class: "btn btn-success" %>
    </div>
  <% end %>
  <h3>Cancel my account</h3>
  <p>Unhappy? <%= link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure you want to cancel your account?" }, method: :delete, class: 'btn btn-danger' %></p>
  <%= link_to "Back", user_dashboard_path, class: "btn btn-primary" %>
</div>


<script>
  // $('#edit_user_details').on('click', function(){
  //   var include_job1 = document.getElementById("include_job1");
  //   var include_job2 = document.getElementById("include_job2");
  //   var include_job3 = document.getElementById("include_job3");
  //   var not_include_job1 = document.getElementById("not_include_job1");
  //   var not_include_job2 = document.getElementById("not_include_job2");
  //   var not_include_job3 = document.getElementById("not_include_job3");
  //   var not_include_job_id1 = $("#not_include_job1")[0];
  //   var not_include_job_id2 = $("#not_include_job2")[0];
  //   var not_include_job_id3 = $("#not_include_job3")[0];

  //   validate();
  //   function validate(){
  //     if(not_include_job1.value != "" && not_include_job1.value == include_job1.value) {
  //       not_include_job_id1.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job1.value != "" && not_include_job1.value == include_job2.value){
  //       not_include_job_id1.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job1.value != "" && not_include_job1.value == include_job3.value) {
  //       not_include_job_id1.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job2.value != "" && not_include_job2.value == include_job1.value) {
  //       not_include_job_id2.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job2.value != "" && not_include_job2.value == include_job2.value) {
  //       not_include_job_id2.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job2.value != "" && not_include_job2.value == include_job3.value) {
  //       not_include_job_id2.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job3.value != "" && not_include_job3.value == include_job1.value) {
  //       not_include_job_id3.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job3.value != "" && not_include_job3.value == include_job2.value) {
  //       not_include_job_id3.setCustomValidity("Please use diffrent title");
  //     } else if (not_include_job3.value != "" && not_include_job3.value == include_job3.value) {
  //       not_include_job_id3.setCustomValidity("Please use diffrent title");
  //     } else{
  //       $('#edit_user').submit();
  //     }
  //   }
  // });
   $(document).ready(function () { 
   $("#edit_user").validate({
    rules: {
      'user[email]':{required: true, email: true},
      'user[password]': {minlength: 6},
      'user[password_confirmation]': {equalTo: '#user_password'},
      "user[first_name]" : {required: true},
      "user[last_name]" : {required: true},
      "user[answer]" : {required: true}
    },
    
    
    messages: {
      "user[first_name]": "First Name can't be blank",
      "user[last_name]": "Last Name can't be blank",
      "user[email]": {required: "Email can't be blank", email: "You must enter a valid email address"},
      'user[password_confirmation]': {equalTo: "Password don't match"}
    }
   });  
  }); 
</script>
